name: Build & Test Stats Dashboard
run-name: ${{ github.actor }} is ${{ github.event.inputs.run_build == 'true' && 'building and deploying' || 'deploying' }} ${{ github.event.inputs.deploy_environment }}
on:
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - acceptance
        - production
      tag_name:
        description: 'Git tag to add'
        type: string
      run_build:
        description: 'Flag if docker image should be re-built'
        default: false
        type: boolean
jobs:

  # this doesn't work but can (probably) use env
  # Can't find 'action.yml', 'action.yaml' or 'Dockerfile'
  #call-deploy-image:
  #  runs-on: ubuntu-latest
  #  env:
  #    TAG_NAME: ${{ github.event.inputs.tag_name || secrets.PROJECT_VERSION }}
  #  steps:
  #    - uses: actions/checkout@v4
      #  with:
      #    repository: europeana/statistics-dashboard
  #    - uses: ./.github/workflows/deploy-image.yml
  #      with:
  #        deploy_environment: ${{ github.event.inputs.deploy_environment }}
  #        docker_image_name: europeana/statistics-dashboard-ui
  #        secrets: inherit
  #    - uses: actions/checkout@v4
      #  with:
      #    repository: europeana/statistics-dashboard

  # this works but can't use env
  call-deploy-image:
    uses: ./.github/workflows/deploy-image.yaml
    secrets: inherit

  make-env-file:
    uses: ./.github/workflows/env-file-generation.yaml
    with:
      deploy_environment: ${{ github.event.inputs.deploy_environment }}
    secrets: inherit

  check-env-file:
    needs: make-env-file
    runs-on: ubuntu-latest
    steps:
      - name: Check Generated Env File
        uses: actions/download-artifact@master
        with:
          name: envFile
          path: env_file
      - run: |
          echo 'retrieved env file...'
          cat env_file/env_file | sed 's/./& /g'

  run-tests:
    needs: make-env-file
    runs-on: ubuntu-latest
    steps:
      - name: Check Generated Env File
        uses: actions/download-artifact@master
        with:
          name: envFile
          path: env_file
      - run: |
          echo 'retrieved env file...'
          cat env_file/env_file | sed 's/./& /g'
      - uses: actions/checkout@v4
        with:
          repository: europeana/statistics-dashboard
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'
      - run: npm install
      - run: npm run test:dev
      - run: cp coverage/**/lcov.info .
      - uses: actions/upload-artifact@master
        with:
          name: appSource
          path: src/app
      - uses: actions/upload-artifact@master
        with:
          name: appLcov
          path: ./lcov.info

  run-sonar:
    needs: 'run-tests'
    runs-on: ubuntu-latest
    steps:
      - name: Get Project Source
        uses: actions/download-artifact@master
        with:
          name: appSource
          path: src/app
      - name: Get Project LCOV
        uses: actions/download-artifact@master
        with:
          name: appLcov
          path: ./lcov.info
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=europeana
            -Dsonar.projectKey=europeana_statistics-dashboard
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.sources=src/app
            -Dsonar.exclusions=src/**/_mocked/**
            -Dsonar.javascript.lcov.reportPaths=./lcov.info/lcov.info

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: europeana/statistics-dashboard
      - name: Build Artifact
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'
      - run: npm install
      - run: npm run dist-localised
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Extract Metadata for Docker Image
        id: meta
        uses: docker/metadata-action@v5
        env:
          PROJECT_VERSION: ${{ secrets.PROJECT_VERSION }}
        with:
          images: andyjmaclean/statistics-dashboard
          #images: ${{ GITHUB_REPOSITORY }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            europeana/statistics-dashboard-ui:${{ env.PROJECT_VERSION }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
