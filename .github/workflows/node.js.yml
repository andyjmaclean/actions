name: Build & Test Stats Dashboard
run-name: ${{ github.actor }} is building / testing the stats-dash
on:
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - acceptance
        - production
jobs:
  create-env-file:
    env:
      APP_FEEDBACK_URL: ${{ vars.APP_FEEDBACK_URL }}
      APP_SERVER_PORTAL: |
        $(( 'test' == ${{ github.event.inputs.deploy_environment }} ? ${{ secrets.TEST_SERVER_PORTAL }} : ${{ secrets.PRODUCTION_SERVER_PORTAL }} ))
      APP_MAINTENANCE_SCHEDULE_ENV_KEY: ${{ secrets.APP_MAINTENANCE_SCHEDULE_ENV_KEY }}
      APP_MAINTENANCE_SCHEDULE_ENV_URL: ${{ secrets.APP_MAINTENANCE_SCHEDULE_ENV_URL }}
      APP_MATOMO_HOST: ${{ secrets.APP_MATOMO_HOST }}
      APP_MATOMO_SITE_ID: ${{ secrets.APP_MATOMO_SITE_ID }}
      APP_SERVER_API: ${{ secrets.APP_SERVER_API }}
      #APP_SERVER_PORTAL: ${{ secrets.APP_SERVER_PORTAL }}
      APP_WS_KEY: ${{ secrets.APP_WS_KEY }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploying to ${{ github.event.inputs.deploy_environment }}"
      - run: |
          touch env_file
          echo APP_FEEDBACK_URL="$APP_FEEDBACK_URL" >> env_file
          echo APP_MAINTENANCE_SCHEDULE_ENV_KEY=${{ env.APP_MAINTENANCE_SCHEDULE_ENV_KEY }} >> env_file
          echo APP_MAINTENANCE_SCHEDULE_ENV_URL=${{ env.APP_MAINTENANCE_SCHEDULE_ENV_URL }} >> env_file
          echo APP_MATOMO_HOST=${{ env.APP_MATOMO_HOST }} >> env_file
          echo APP_MATOMO_SITE_ID=${{ env.APP_MATOMO_SITE_ID }} >> env_file
          echo APP_SERVER_API=${{ env.APP_SERVER_API }} >> env_file
          echo APP_SERVER_PORTAL=${{ env.APP_SERVER_PORTAL }} >> env_file
          echo APP_WS_KEY="$APP_WS_KEY" >> env_file
          cat env_file
      - run: exit -1

  run-tests:
    needs: create-env-file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: europeana/statistics-dashboard
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'
      - run: npm install
      - run: npm run test:dev
      - run: cp coverage/**/lcov.info .
      - uses: actions/upload-artifact@master
        with:
          name: appSource
          path: src/app
      - uses: actions/upload-artifact@master
        with:
          name: appLcov
          path: ./lcov.info

  run-sonar:
    needs: 'run-tests'
    runs-on: ubuntu-latest
    steps:
      - name: Get Project Source
        uses: actions/download-artifact@master
        with:
          name: appSource
          path: src/app
      - name: Get Project LCOV
        uses: actions/download-artifact@master
        with:
          name: appLcov
          path: ./lcov.info
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=europeana
            -Dsonar.projectKey=europeana_statistics-dashboard
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.sources=src/app
            -Dsonar.exclusions=src/**/_mocked/**
            -Dsonar.javascript.lcov.reportPaths=./lcov.info/lcov.info

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: europeana/statistics-dashboard
      - name: Build Artifact
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'
      - run: npm install
      - run: npm run dist-localised
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Extract Metadata for Docker Image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: andyjmaclean/statistics-dashboard
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#        uses: actions/checkout@v4

#tags: europeana/statistics-dashboard-ui/${{ git log -1 --pretty=%h }}
#docker build  \
#-t ${IMAGE_FULL_VALUE} \
#-t ${IMAGE_LAST_COMMIT} \

# create env file
#cat > deployment/$DEPLOY_TARGET/env_file << EOF
#APP_FEEDBACK_URL=$APP_FEEDBACK_URL
#APP_SERVER_API=$APP_SERVER_API
#APP_SERVER_PORTAL=$APP_SERVER_PORTAL
#APP_WS_KEY=$APP_WS_KEY
#APP_MAINTENANCE_SCHEDULE_ENV_URL=$APP_MAINTENANCE_SCHEDULE_ENV_URL
#APP_MAINTENANCE_SCHEDULE_ENV_KEY=$APP_MAINTENANCE_SCHEDULE_ENV_KEY
#APP_MATOMO_HOST=$APP_MATOMO_HOST
#APP_MATOMO_SITE_ID=$APP_MATOMO_SITE_ID
#EOF
